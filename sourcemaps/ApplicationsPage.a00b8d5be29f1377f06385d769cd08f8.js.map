{"version":3,"file":"js/ApplicationsPage.1682676644043.2ddfb255da6b2c759269.js","mappings":"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","sources":["webpack:///./src/store/applicationReducer.js","webpack:///./src/api.js","webpack:///./src/actions.js","webpack:///./src/PresentationalComponents/PlainTextWithLinks.js","webpack:///./src/PresentationalComponents/ErrState.js","webpack:///./src/PresentationalComponents/RenderForms.js","webpack:///./src/SmartComponents/Applications/Applications.js"],"sourcesContent":["import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../constants';\n\nexport const defaultState = { loaded: false, configLoaded: false, error: null };\n\nexport const loading = (store) => {\n  return {\n    ...store,\n    loaded: false,\n    schema: [],\n  };\n};\n\nexport const getSchema = (store, { payload }) => {\n  return {\n    ...store,\n    schema: payload,\n    loaded: true,\n  };\n};\n\nexport const getConfig = (store, { payload }) => {\n  return {\n    ...store,\n    appsConfig: payload,\n    configLoaded: true,\n  };\n};\n\nexport const getSchemaRejected = (store) => ({\n  ...store,\n  error: true,\n});\n\nexport default {\n  applicationsStore: applyReducerHash(\n    {\n      [ACTION_TYPES.GET_SCHEMA_FULFILLED]: getSchema,\n      [ACTION_TYPES.GET_SCHEMA_PENDING]: loading,\n      [ACTION_TYPES.GET_SCHEMA_REJECTED]: getSchemaRejected,\n      [ACTION_TYPES.SAVE_VALUES_FULFILLED]: (store) => ({ ...store }),\n      [ACTION_TYPES.GET_CONFIG_PENDING]: (store) => ({\n        ...store,\n        appsConfig: {},\n        configLoaded: false,\n      }),\n      [ACTION_TYPES.GET_CONFIG_FULFILLED]: getConfig,\n    },\n    defaultState\n  ),\n};\n","import axios from 'axios';\nimport {\n  authInterceptor,\n  errorInterceptor,\n  interceptor401,\n  interceptor500,\n  responseDataInterceptor,\n} from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { load } from 'js-yaml';\n\nimport registry from './store';\nimport { API_ERROR } from './constants';\n\nconst interceptor403 = (error) => {\n  const store = registry.getStore();\n  if (error.response && error.response.status === 403) {\n    store.dispatch({ type: API_ERROR, payload: 403 });\n  }\n\n  throw error;\n};\n\nconst axiosInstance = axios.create();\naxiosInstance.interceptors.request.use(authInterceptor);\naxiosInstance.interceptors.response.use(responseDataInterceptor);\n\naxiosInstance.interceptors.response.use(null, interceptor401);\naxiosInstance.interceptors.response.use(null, interceptor403);\naxiosInstance.interceptors.response.use(null, interceptor500);\naxiosInstance.interceptors.response.use(null, errorInterceptor);\n\nexport const getConfig = async () => {\n  const config = await axiosInstance.get(\n    `${insights.chrome.isBeta() ? '/beta' : ''}/config/main.yml`\n  );\n  return load(config);\n};\n\nexport const getApplicationSchema = async (application, apiVersion = 'v1') =>\n  axiosInstance.get(`/api/${application}/${apiVersion}/settings`);\n\nexport const saveValues = async (application, values, apiVersion = 'v1') =>\n  axiosInstance.post(`/api/${application}/${apiVersion}/settings/`, {\n    ...values,\n  });\n","import {\n  getConfig as config,\n  getApplicationSchema,\n  saveValues as save,\n} from './api';\nimport { ACTION_TYPES } from './constants';\n\nexport const getSchema = (application, apiVersion) => ({\n  type: ACTION_TYPES.GET_SCHEMA,\n  payload: getApplicationSchema(application, apiVersion),\n});\n\nexport const saveValues = (\n  application,\n  values,\n  apiVersion,\n  appTitle = 'Red Hat Insights'\n) => ({\n  type: ACTION_TYPES.SAVE_VALUES,\n  payload: save(application, values, apiVersion),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Application settings saved',\n        description: `Settings for ${appTitle} were replaced with new values.`,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const getConfig = () => ({\n  type: ACTION_TYPES.GET_CONFIG,\n  payload: config(),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const PlainTextWithLinks = ({ text, linkProps }) => {\n  let linkIx = 0;\n  const items = text.split(/<link>/).reduce((acc, curr) => {\n    let slice = curr.split(/<\\/link>/);\n    if (slice.length === 2) {\n      slice[0] = (\n        <Text\n          key={`link-${linkIx}`}\n          rel=\"noreferrer noopener\"\n          className=\"pf-u-ml-md\"\n          component={TextVariants.a}\n          target=\"_blank\"\n          {...linkProps[linkIx]}\n        >\n          {slice[0]}\n        </Text>\n      );\n      linkIx++;\n    }\n\n    return [...acc, ...slice];\n  }, []);\n  return <Text component={TextVariants.p}>{items}</Text>;\n};\n\nPlainTextWithLinks.propTypes = {\n  text: PropTypes.string.isRequired,\n  linkProps: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\n\nexport const ErrState = ({ errorTitle, errorDescription }) => {\n  return (\n    <ErrorState\n      errorTitle={errorTitle}\n      errorDescription={\n        <div dangerouslySetInnerHTML={{ __html: errorDescription }} />\n      }\n    />\n  );\n};\n\nErrState.propTypes = {\n  errorTitle: propTypes.string,\n  errorDescription: propTypes.string,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Card, CardBody, Stack, StackItem } from '@patternfly/react-core';\nimport { PlainTextWithLinks } from './PlainTextWithLinks';\nimport { ErrState } from './ErrState';\n\nimport FormRender from '@data-driven-forms/react-form-renderer/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/validator-mapper';\nimport DualListSortButton from '@data-driven-forms/pf4-component-mapper/dual-list-sort-button';\n\nconst componentMapperExtended = {\n  ...componentMapper,\n  'switch-field': componentMapper[componentTypes.SWITCH],\n  'textarea-field': componentMapper[componentTypes.TEXTAREA],\n  'select-field': componentMapper[componentTypes.SELECT],\n  'plain-text-with-links': PlainTextWithLinks,\n  'error-state': ErrState,\n  [componentTypes.DUAL_LIST_SELECT]: {\n    component: componentMapper[componentTypes.DUAL_LIST_SELECT],\n    isFilterable: true,\n    isSortable: true,\n    isSearchable: true,\n    resolveProps: (props) => ({\n      ...(props.leftTitle && { availableOptionsTitle: props.leftTitle }),\n      ...(props.rightTitle && { chosenOptionsTitle: props.rightTitle }),\n    }),\n    availableOptionsActions: [\n      <DualListSortButton position=\"left\" key=\"sort\" />,\n    ],\n    chosenOptionsActions: [<DualListSortButton position=\"right\" key=\"sort\" />],\n  },\n};\n\nconst validatorMapperBridge = {\n  'required-validator': validatorMapper[validatorTypes.REQUIRED],\n  'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n  'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n  'url-validator': validatorMapper[validatorTypes.URL],\n  'max-length-validator': validatorMapper[validatorTypes.MAX_LENGTH],\n  'min-items-validator': validatorMapper[validatorTypes.MIN_ITEMS],\n  'exact-length-validator': validatorMapper[validatorTypes.EXACT_LENGTH],\n};\n\nconst FormTemplateWrapper = (props) => (\n  <FormTemplate\n    {...props}\n    submitLabel=\"Save\"\n    canReset\n    {...props.schema.formProps}\n  />\n);\n\nconst RenderForms = ({ schemas, loaded, saveValues, ...props }) => {\n  const [initialValues, setInitialValues] = useState();\n  return (\n    <Stack {...props} hasGutter>\n      {loaded ? (\n        schemas.map((schema, i) => (\n          <StackItem key={`settings-form-${i}`}>\n            <Card>\n              <CardBody>\n                <FormRender\n                  componentMapper={componentMapperExtended}\n                  FormTemplate={FormTemplateWrapper}\n                  schema={schema}\n                  submitLabel=\"Save\"\n                  onSubmit={(values, formApi) => {\n                    setInitialValues(values);\n                    formApi.initialize(values);\n                    return saveValues(values);\n                  }}\n                  initialValues={initialValues}\n                  validatorMapper={validatorMapperBridge}\n                />\n              </CardBody>\n            </Card>\n          </StackItem>\n        ))\n      ) : (\n        <StackItem>\n          <Card>\n            <CardBody>\n              <Skeleton size=\"lg\" />\n            </CardBody>\n          </Card>\n        </StackItem>\n      )}\n    </Stack>\n  );\n};\n\nRenderForms.propTypes = {\n  schemas: PropTypes.arrayOf(PropTypes.shape({})),\n  loaded: PropTypes.bool,\n  appId: PropTypes.string,\n  saveValues: PropTypes.func,\n};\n\nRenderForms.defaultProps = {\n  saveValues: () => undefined,\n};\n\nFormTemplateWrapper.propTypes = {\n  schema: PropTypes.object,\n};\n\nexport default RenderForms;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport { register } from '../../store';\nimport applicationReducer from '../../store/applicationReducer';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { getConfig, getSchema, saveValues } from '../../actions';\nimport { RenderForms } from '../../PresentationalComponents';\nimport startCase from 'lodash/startCase';\n\nexport const getAppId = ({ params } = {}) => {\n  return (params && params.id) || '';\n};\n\nconst Applications = ({\n  appsConfig,\n  saveValues,\n  match,\n  getSchema,\n  getConfig,\n  configLoaded,\n  loaded,\n  schema,\n  hasError,\n}) => {\n  const currApp =\n    (appsConfig && appsConfig[getAppId(match)]) || getAppId(match);\n  const appName =\n    (currApp.frontend && currApp.frontend.title) || currApp.title || currApp;\n  const [isOrgAdmin, setIsOrgAdmin] = useState(undefined);\n\n  useEffect(() => {\n    register(applicationReducer);\n    register({ notifications: notificationsReducer });\n    if (!appsConfig) {\n      getConfig();\n    }\n\n    insights.chrome.auth\n      .getUser()\n      .then((user) => setIsOrgAdmin(user.identity.user.is_org_admin));\n  }, []);\n\n  useEffect(() => {\n    if (currApp && typeof currApp !== 'string') {\n      getSchema(currApp?.api?.apiName || match.params.id, currApp.api);\n    }\n  }, [currApp]);\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <React.Fragment>\n          <PageHeaderTitle\n            title={isOrgAdmin ? 'Applications settings' : startCase(appName)}\n          />\n          {isOrgAdmin &&\n            (configLoaded ? (\n              <p className=\"pf-u-mt-sm\">{`Settings for ${startCase(\n                appName\n              )}`}</p>\n            ) : (\n              <Skeleton size=\"sm\" />\n            ))}\n        </React.Fragment>\n      </PageHeader>\n      {typeof isOrgAdmin === 'boolean' && !hasError && (\n        <Main>\n          {isOrgAdmin ? (\n            <RenderForms\n              loaded={loaded}\n              schemas={schema}\n              saveValues={(values) =>\n                saveValues(\n                  currApp?.api?.apiName || match.params.id,\n                  values,\n                  currApp.api,\n                  currApp.title\n                )\n              }\n            />\n          ) : (\n            <NotAuthorized serviceName={startCase(appName)} />\n          )}\n        </Main>\n      )}\n      {hasError && <ErrorState />}\n    </React.Fragment>\n  );\n};\n\nApplications.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n  appsConfig: PropTypes.shape({\n    [PropTypes.string]: PropTypes.shape({\n      title: PropTypes.string,\n      frontend: PropTypes.shape({\n        title: PropTypes.string,\n      }),\n    }),\n  }),\n  configLoaded: PropTypes.bool,\n  getSchema: PropTypes.func,\n  loaded: PropTypes.bool,\n  saveValues: PropTypes.func,\n  getConfig: PropTypes.func,\n  schema: PropTypes.arrayOf(PropTypes.object),\n  hasError: PropTypes.bool,\n};\n\nfunction mapStateToProps({ applicationsStore }) {\n  return {\n    schema: applicationsStore && applicationsStore.schema,\n    loaded: applicationsStore && applicationsStore.loaded,\n    appsConfig: applicationsStore && applicationsStore.appsConfig,\n    configLoaded: applicationsStore && applicationsStore.configLoaded,\n    hasError: applicationsStore && applicationsStore.error,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getConfig: () => dispatch(getConfig()),\n    getSchema: (application, { versions: [currVersion] } = { versions: [] }) =>\n      dispatch(getSchema(application, currVersion)),\n    saveValues: (\n      application,\n      values,\n      { versions: [currVersion] } = { versions: [] },\n      appTitle\n    ) => dispatch(saveValues(application, values, currVersion, appTitle)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Applications);\n"],"names":["applicationsStore","applyReducerHash","ACTION_TYPES","store","payload","schema","loaded","error","appsConfig","configLoaded","axiosInstance","axios","interceptors","request","use","authInterceptor","response","responseDataInterceptor","interceptor401","registry","status","dispatch","type","API_ERROR","interceptor500","errorInterceptor","getConfig","get","insights","chrome","isBeta","config","load","getApplicationSchema","application","apiVersion","saveValues","values","post","getSchema","appTitle","save","meta","notifications","fulfilled","variant","title","description","dismissable","PlainTextWithLinks","text","linkProps","linkIx","items","split","reduce","acc","curr","slice","length","Text","key","rel","className","component","TextVariants","target","propTypes","PropTypes","isRequired","ErrState","errorTitle","errorDescription","ErrorState","dangerouslySetInnerHTML","__html","componentMapperExtended","componentMapper","componentTypes","isFilterable","isSortable","isSearchable","resolveProps","props","leftTitle","availableOptionsTitle","rightTitle","chosenOptionsTitle","availableOptionsActions","position","chosenOptionsActions","validatorMapperBridge","validatorMapper","validatorTypes","FormTemplateWrapper","submitLabel","canReset","formProps","RenderForms","schemas","useState","initialValues","setInitialValues","Stack","hasGutter","map","i","StackItem","Card","CardBody","FormTemplate","onSubmit","formApi","initialize","Skeleton","size","appId","defaultProps","getAppId","params","id","Applications","match","hasError","currApp","appName","frontend","undefined","isOrgAdmin","setIsOrgAdmin","useEffect","register","applicationReducer","notificationsReducer","auth","getUser","then","user","identity","is_org_admin","api","apiName","PageHeader","PageHeaderTitle","startCase","Main","NotAuthorized","serviceName","connect","versions","currVersion"],"sourceRoot":""}